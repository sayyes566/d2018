{ mode: 'development', context: '/home/kristen/daxia/vue/frontend/daxia', devtool: 'cheap-module-eval-source-map', node: { setImmediate: false, process: 'mock', dgram: 'empty', fs: 'empty', net: 'empty', tls: 'empty', child_process: 'empty' }, output: { path: '/home/kristen/daxia/vue/frontend/daxia/dist', filename: '[name].js', publicPath: '/', globalObject: 'this' }, resolve: { alias: { '@': '/home/kristen/daxia/vue/frontend/daxia/src', vue$: 'vue/dist/vue.runtime.esm.js' }, extensions: [ '.js', '.jsx', '.vue', '.json' ], modules: [ 'node_modules', '/home/kristen/daxia/vue/frontend/daxia/node_modules', '/home/kristen/daxia/vue/frontend/daxia/node_modules/@vue/cli-service/node_modules' ] }, resolveLoader: { modules: [ '/home/kristen/daxia/vue/frontend/daxia/node_modules/@vue/cli-plugin-eslint/node_modules', '/home/kristen/daxia/vue/frontend/daxia/node_modules/@vue/cli-plugin-babel/node_modules', 'node_modules', '/home/kristen/daxia/vue/frontend/daxia/node_modules', '/home/kristen/daxia/vue/frontend/daxia/node_modules/@vue/cli-service/node_modules' ] }, module: { noParse: /^(vue|vue-router|vuex|vuex-router-sync)$/, rules: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('vue') node_modules/ public/ src/ { test: /\.vue$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('vue').use('cache-loader') node_modules/ public/ src/ { loader: 'cache-loader', options: { cacheDirectory: '/home/kristen/daxia/vue/frontend/daxia/node_modules/.cache/vue-loader', cacheIdentifier: '3209a987' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('vue').use('vue-loader') node_modules/ public/ src/ { loader: 'vue-loader', options: { compilerOptions: { preserveWhitespace: false }, cacheDirectory: '/home/kristen/daxia/vue/frontend/daxia/node_modules/.cache/vue-loader', cacheIdentifier: '3209a987' } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('images') node_modules/ public/ src/ { test: /\.(png|jpe?g|gif|webp)(\?.*)?$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('images').use('url-loader') node_modules/ public/ src/ { loader: 'url-loader', options: { limit: 4096, fallback: { loader: 'file-loader', options: { name: 'img/[name].[hash:8].[ext]' } } } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('svg') node_modules/ public/ src/ { test: /\.(svg)(\?.*)?$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('svg').use('file-loader') node_modules/ public/ src/ { loader: 'file-loader', options: { name: 'img/[name].[hash:8].[ext]' } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('media') node_modules/ public/ src/ { test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('media').use('url-loader') node_modules/ public/ src/ { loader: 'url-loader', options: { limit: 4096, fallback: { loader: 'file-loader', options: { name: 'media/[name].[hash:8].[ext]' } } } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('fonts') node_modules/ public/ src/ { test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/i, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('fonts').use('url-loader') node_modules/ public/ src/ { loader: 'url-loader', options: { limit: 4096, fallback: { loader: 'file-loader', options: { name: 'fonts/[name].[hash:8].[ext]' } } } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('pug') node_modules/ public/ src/ { test: /\.pug$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('pug').use('pug-plain-loader') node_modules/ public/ src/ { loader: 'pug-plain-loader' } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css') node_modules/ public/ src/ { test: /\.css$/, oneOf: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue-modules') node_modules/ public/ src/ { resourceQuery: /module/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue') node_modules/ public/ src/ { resourceQuery: /\?vue/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('vue').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal-modules') node_modules/ public/ src/ { test: /\.module\.\w+$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal') node_modules/ public/ src/ { use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('css').oneOf('normal').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss') node_modules/ public/ src/ { test: /\.p(ost)?css$/, oneOf: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue-modules') node_modules/ public/ src/ { resourceQuery: /module/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue') node_modules/ public/ src/ { resourceQuery: /\?vue/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('vue').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal-modules') node_modules/ public/ src/ { test: /\.module\.\w+$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal') node_modules/ public/ src/ { use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('postcss').oneOf('normal').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } } ] } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss') node_modules/ public/ src/ { test: /\.scss$/, oneOf: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue-modules') node_modules/ public/ src/ { resourceQuery: /module/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue-modules').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue') node_modules/ public/ src/ { resourceQuery: /\?vue/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('vue').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal-modules') node_modules/ public/ src/ { test: /\.module\.\w+$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal-modules').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal') node_modules/ public/ src/ { use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('scss').oneOf('normal').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false } } ] } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass') node_modules/ public/ src/ { test: /\.sass$/, oneOf: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue-modules') node_modules/ public/ src/ { resourceQuery: /module/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue-modules').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false, indentedSyntax: true } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue') node_modules/ public/ src/ { resourceQuery: /\?vue/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('vue').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false, indentedSyntax: true } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal-modules') node_modules/ public/ src/ { test: /\.module\.\w+$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal-modules').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false, indentedSyntax: true } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal') node_modules/ public/ src/ { use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('sass').oneOf('normal').use('sass-loader') node_modules/ public/ src/ { loader: 'sass-loader', options: { sourceMap: false, indentedSyntax: true } } ] } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less') node_modules/ public/ src/ { test: /\.less$/, oneOf: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue-modules') node_modules/ public/ src/ { resourceQuery: /module/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue-modules').use('less-loader') node_modules/ public/ src/ { loader: 'less-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue') node_modules/ public/ src/ { resourceQuery: /\?vue/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('vue').use('less-loader') node_modules/ public/ src/ { loader: 'less-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal-modules') node_modules/ public/ src/ { test: /\.module\.\w+$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal-modules').use('less-loader') node_modules/ public/ src/ { loader: 'less-loader', options: { sourceMap: false } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal') node_modules/ public/ src/ { use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('less').oneOf('normal').use('less-loader') node_modules/ public/ src/ { loader: 'less-loader', options: { sourceMap: false } } ] } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus') node_modules/ public/ src/ { test: /\.styl(us)?$/, oneOf: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue-modules') node_modules/ public/ src/ { resourceQuery: /module/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue-modules').use('stylus-loader') node_modules/ public/ src/ { loader: 'stylus-loader', options: { sourceMap: false, preferPathResolver: 'webpack' } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue') node_modules/ public/ src/ { resourceQuery: /\?vue/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('vue').use('stylus-loader') node_modules/ public/ src/ { loader: 'stylus-loader', options: { sourceMap: false, preferPathResolver: 'webpack' } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal-modules') node_modules/ public/ src/ { test: /\.module\.\w+$/, use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal-modules').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal-modules').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2, modules: true, localIdentName: '[name]_[local]_[hash:base64:5]' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal-modules').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal-modules').use('stylus-loader') node_modules/ public/ src/ { loader: 'stylus-loader', options: { sourceMap: false, preferPathResolver: 'webpack' } } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal') node_modules/ public/ src/ { use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal').use('vue-style-loader') node_modules/ public/ src/ { loader: 'vue-style-loader', options: { sourceMap: false, shadowMode: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal').use('css-loader') node_modules/ public/ src/ { loader: 'css-loader', options: { sourceMap: false, importLoaders: 2 } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal').use('postcss-loader') node_modules/ public/ src/ { loader: 'postcss-loader', options: { sourceMap: false } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('stylus').oneOf('normal').use('stylus-loader') node_modules/ public/ src/ { loader: 'stylus-loader', options: { sourceMap: false, preferPathResolver: 'webpack' } } ] } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('js') node_modules/ public/ src/ { test: /\.jsx?$/, exclude: [ function () { /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old omitted long function node_modules/ public/ src/ } ], use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('js').use('cache-loader') node_modules/ public/ src/ { loader: 'cache-loader', options: { cacheDirectory: '/home/kristen/daxia/vue/frontend/daxia/node_modules/.cache/babel-loader', cacheIdentifier: '48bb934d' } }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('js').use('babel-loader') node_modules/ public/ src/ { loader: 'babel-loader' } ] }, /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('eslint') node_modules/ public/ src/ { enforce: 'pre', test: /\.(vue|(j|t)sx?)$/, exclude: [ /node_modules/, '/home/kristen/daxia/vue/frontend/daxia/node_modules/@vue/cli-service/lib' ], use: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.module.rule('eslint').use('eslint-loader') node_modules/ public/ src/ { loader: 'eslint-loader', options: { extensions: [ '.js', '.jsx', '.vue' ], cache: true, cacheIdentifier: '85f70546', emitWarning: true, emitError: false, formatter: function () { /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old omitted long function node_modules/ public/ src/ } } } ] } ] }, plugins: [ /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('vue-loader') node_modules/ public/ src/ new VueLoaderPlugin(), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('define') node_modules/ public/ src/ new DefinePlugin( { 'process.env': { NODE_ENV: '"development"', BASE_URL: '"/"' } } ), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('case-sensitive-paths') node_modules/ public/ src/ new CaseSensitivePathsPlugin(), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('friendly-errors') node_modules/ public/ src/ new FriendlyErrorsWebpackPlugin( { additionalTransformers: [ function () { /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old omitted long function node_modules/ public/ src/ } ], additionalFormatters: [ function () { /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old omitted long function node_modules/ public/ src/ } ] } ), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('hmr') node_modules/ public/ src/ new HotModuleReplacementPlugin(), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('no-emit-on-errors') node_modules/ public/ src/ new NoEmitOnErrorsPlugin(), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('progress') node_modules/ public/ src/ new ProgressPlugin(), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('html') node_modules/ public/ src/ new HtmlWebpackPlugin( { templateParameters: function () { /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old omitted long function node_modules/ public/ src/ }, template: '/home/kristen/daxia/vue/frontend/daxia/public/index.html' } ), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('pwa') node_modules/ public/ src/ new HtmlPwaPlugin( { name: 'daxia' } ), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('preload') node_modules/ public/ src/ new PreloadPlugin( { rel: 'preload', include: 'initial', fileBlacklist: [ /\.map$/, /hot-update\.js$/ ] } ), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('prefetch') node_modules/ public/ src/ new PreloadPlugin( { rel: 'prefetch', include: 'asyncChunks' } ), /bin /boot /dev /etc /home /initrd.img /initrd.img.old /lib /lib64 /lost+found /media /mnt /opt /proc /root /run /sbin /snap /srv /sys /tmp /usr /var /vmlinuz /vmlinuz.old config.plugin('copy') node_modules/ public/ src/ new CopyWebpackPlugin( [ { from: '/home/kristen/daxia/vue/frontend/daxia/public', to: '/home/kristen/daxia/vue/frontend/daxia/dist', toType: 'dir', ignore: [ 'index.html', '.DS_Store' ] } ] ) ], entry: { app: [ './src/main.js' ] } }
